{"version":3,"sources":["./src/app/modules/reusable-forms/reusable-forms-routing.module.ts","./src/app/modules/reusable-forms/reusable-forms.module.ts","./src/app/modules/reusable-forms/core/reusable-forms.constant.ts","./src/app/modules/reusable-forms/reusable-forms.component.ts","./src/app/modules/reusable-forms/reusable-forms.component.html","./src/app/modules/reusable-forms/core/form.config.ts","./src/app/modules/reusable-forms/customer-form/customer-form.component.ts","./src/app/modules/reusable-forms/customer-form/customer-form.component.html"],"names":[],"mappings":"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","file":"modules-reusable-forms-reusable-forms-module.js","sourcesContent":["import { CustomerFormComponent } from './customer-form/customer-form.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ReusableFormsComponent } from './reusable-forms.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ReusableFormsComponent },\r\n  { path: 'customer-form', component: CustomerFormComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReusableFormsRoutingModule { }\r\n","import { SharedModule } from 'src/app/shared/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReusableFormsRoutingModule } from './reusable-forms-routing.module';\r\nimport { ReusableFormsComponent } from './reusable-forms.component';\r\nimport { CustomerFormComponent } from './customer-form/customer-form.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReusableFormsComponent, CustomerFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReusableFormsRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ReusableFormsModule { }\r\n","export const CONTACT_HEADER = {\r\n  title: 'Angular Reusable Forms',\r\n  subTitle: 'We can reuse one single form via config file in multiple parameters'\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\nimport { CONTACT_HEADER } from './core/reusable-forms.constant';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LOGIN_FORM, LOGIN_FORM2 } from './core/form.config';\r\n\r\n@Component({\r\n  selector: 'app-reusable-forms',\r\n  templateUrl: './reusable-forms.component.html',\r\n  styleUrls: ['./reusable-forms.component.scss']\r\n})\r\nexport class ReusableFormsComponent implements OnInit {\r\n  contactData = CONTACT_HEADER;\r\n  formConfig = LOGIN_FORM;\r\n  formConfig2 = LOGIN_FORM2;\r\n  formData!: any;\r\n  formGroup!: FormGroup;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onReceiveFormGroup(e:any){\r\n    this.formData = e;\r\n  }\r\n  onReceiveFormGroup2(e:any){\r\n    this.formGroup = e;\r\n  }\r\n  onSubmit(){\r\n    console.log(this.formData.value)\r\n  }\r\n  onSubmitForm(){\r\n    console.log(this.formGroup)\r\n    this.formGroup.patchValue({\r\n      password: \"123456\",\r\n      user: \"ankit\"\r\n    });\r\n    console.log(this.formGroup.value)\r\n  }\r\n}\r\n","<div class=\"space-30\"></div>\r\n<button class=\"primary-btn\" routerLink=\"/\">Back</button>\r\n<app-contact [data]=\"contactData\"></app-contact>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-5\">\r\n    <app-ak-body>\r\n      <app-ak-form [formConfig]=\"formConfig\" (formGroupReceiever)=\"onReceiveFormGroup($event)\"></app-ak-form>\r\n    </app-ak-body>\r\n    <button class=\"primary-btn\" (click)=\"onSubmit()\" type=\"submit\">Submit</button>\r\n  </div>\r\n  <div class=\"col-md-5\">\r\n    <app-ak-body>\r\n      <app-ak-form [formConfig]=\"formConfig2\" (formGroupReceiever)=\"onReceiveFormGroup2($event)\"></app-ak-form>\r\n    </app-ak-body>\r\n    <button class=\"primary-btn\" (click)=\"onSubmitForm()\" type=\"submit\">Submit</button>\r\n  </div>\r\n  <div class=\"col-md-2\">\r\n    <p>For customer form, please click on below button</p>\r\n    <button class=\"primary-btn\" routerLink=\"customer-form\">customer-form</button>\r\n  </div>\r\n</div>\r\n","import { Validators } from '@angular/forms';\r\nimport { AkFormModel } from './../../../shared/forms/ak-form/core/ak-form.types';\r\nexport const LOGIN_FORM: AkFormModel = {\r\n  name: \"Login Form\",\r\n  groups: [\r\n    {\r\n      columns: 3,\r\n      groupName: 'Login Details',\r\n      controls: [\r\n        {\r\n          labelName: \"User Name\",\r\n          controlName: \"user\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"User Password\",\r\n          controlName: \"password\",\r\n          type: \"password\",\r\n          validator: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\nexport const LOGIN_FORM2: AkFormModel = {\r\n  name: \"Auto filled Login Form\",\r\n  groups: [\r\n    {\r\n      columns: 3,\r\n      groupName: 'Auto filled Login Form',\r\n      controls: [\r\n        {\r\n          labelName: \"Name\",\r\n          controlName: \"user\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"Password\",\r\n          controlName: \"password\",\r\n          type: \"password\",\r\n          validator: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\nexport const CUSTOMER_FORM: AkFormModel = {\r\n  name: \"Customer Form\",\r\n  groups: [\r\n    {\r\n      columns: 3,\r\n      groupName: 'Personal Information',\r\n      controls: [\r\n        {\r\n          labelName: \"Name\",\r\n          controlName: \"user\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"Email Id\",\r\n          controlName: \"email\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"Gender\",\r\n          controlName: \"gender\",\r\n          type: \"select\", \r\n          validator: [],\r\n          dropdownData: [\r\n            {name:'Select', value:''},\r\n            {name:'Male', value:'M'},\r\n            {name:'Female', value:'F'},\r\n            {name:'Other', value:'O'},\r\n          ]\r\n        },\r\n        {\r\n          labelName: \"Country\",\r\n          controlName: \"country\",\r\n          type: \"select\", \r\n          validator: [],\r\n          dropdownData: [\r\n            {name:'Select', value:''},\r\n            {name:'India', value:'IN'},\r\n            {name:'Other', value:'OT'}, \r\n          ]\r\n        },\r\n        {\r\n          labelName: \"Country Name\",\r\n          controlName: \"country_other\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n\r\n      ]\r\n    }\r\n  ]\r\n}","import { FormGroup } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CUSTOMER_FORM } from '../core/form.config';\r\nimport { CONTACT_HEADER } from '../core/reusable-forms.constant';\r\n\r\n@Component({\r\n  selector: 'app-customer-form',\r\n  templateUrl: './customer-form.component.html',\r\n  styleUrls: ['./customer-form.component.scss']\r\n})\r\nexport class CustomerFormComponent implements OnInit {\r\n  contactData = CONTACT_HEADER;\r\n  customerForm = CUSTOMER_FORM;\r\n  formGroup!:FormGroup;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onReceiveFormGroup(form:FormGroup){\r\n    this.formGroup = form;\r\n    this.formGroup.get(\"user\")?.valueChanges.subscribe((data)=>{\r\n      if(data){\r\n        this.formGroup.get(\"email\")?.disable({\r\n          onlySelf: true\r\n        });\r\n      } else {\r\n        this.formGroup.get(\"email\")?.enable({\r\n          onlySelf: true\r\n        });\r\n      }\r\n      this.formGroup.get(\"email\")?.updateValueAndValidity();\r\n    })\r\n  }\r\n  onSubmit(){\r\n    console.log(this.formGroup.value)\r\n  }\r\n}\r\n","<div class=\"space-30\"></div>\r\n<button class=\"primary-btn\" routerLink=\"/reusable-forms\">Back</button>\r\n<app-contact [data]=\"contactData\"></app-contact>\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <app-ak-body>\r\n        <p class=\"ak-title\">{{customerForm.name}}</p>\r\n      <app-ak-form\r\n        [formConfig]=\"customerForm\"\r\n        (formGroupReceiever)=\"onReceiveFormGroup($event)\"\r\n      ></app-ak-form>\r\n    </app-ak-body>\r\n    <button class=\"primary-btn\" (click)=\"onSubmit()\" type=\"submit\">\r\n      Submit\r\n    </button>\r\n  </div>\r\n</div>\r\n<div class=\"space-30\"></div>"],"sourceRoot":"webpack:///"}