{"version":3,"sources":["./src/app/modules/reusable-dialog/reusable-dialog.module.ts","./src/app/modules/reusable-dialog/reusable-dialog-routing.module.ts","./src/app/modules/reusable-dialog/core/reusable-dialog.constant.ts","./src/app/modules/reusable-dialog/reusable-dialog.component.ts","./src/app/modules/reusable-dialog/reusable-dialog.component.html"],"names":[],"mappings":"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","file":"modules-reusable-dialog-reusable-dialog-module.js","sourcesContent":["import { SharedModule } from './../../shared/shared.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ReusableDialogRoutingModule } from './reusable-dialog-routing.module';\r\nimport { ReusableDialogComponent } from './reusable-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReusableDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReusableDialogRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ReusableDialogModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ReusableDialogComponent } from './reusable-dialog.component';\r\n\r\nconst routes: Routes = [{ path: '', component: ReusableDialogComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReusableDialogRoutingModule { }\r\n","import { AkFormModel } from \"src/app/shared/forms/ak-form/core/ak-form.types\"\r\nimport { openDialogOneTypes } from \"./reusable-dialog.types\"\r\n\r\nexport const CONTACT_HEADER = {\r\n  title: 'Angular Reusable Dialog',\r\n  subTitle: 'We can reuse one single dialog via config file in multiple parameters'\r\n}\r\nexport const OPEN_DIALOG_ONE_DATA:openDialogOneTypes = {\r\n  title: 'Message Submit',\r\n  desc: 'Please press submit for submit the message.'\r\n}\r\nexport const OPEN_DIALOG_TWO_DATA:openDialogOneTypes = {\r\n  title: 'Form Submit',\r\n  desc: 'Can you please submit this form by press submit.'\r\n}\r\nexport const LOGIN_FORM: AkFormModel = {\r\n  name: \"Login Form\",\r\n  groups: [\r\n    {\r\n      columns: 3,\r\n      groupName: 'Login Details',\r\n      controls: [\r\n        {\r\n          labelName: \"User Name\",\r\n          controlName: \"user\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"User Password\",\r\n          controlName: \"password\",\r\n          type: \"password\",\r\n          validator: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\nexport const USER_INFO: AkFormModel = {\r\n  name: \"User Info\",\r\n  groups: [\r\n    {\r\n      columns: 2,\r\n      groupName: 'User Info',\r\n      controls: [\r\n        {\r\n          labelName: \"User Name\",\r\n          controlName: \"user\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"Email Id\",\r\n          controlName: \"email\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"Address\",\r\n          controlName: \"address\",\r\n          type: \"text\",\r\n          validator: []\r\n        },\r\n        {\r\n          labelName: \"Mobile No\",\r\n          controlName: \"mobile\",\r\n          type: \"text\",\r\n          validator: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n","import { CONTACT_HEADER, OPEN_DIALOG_ONE_DATA, OPEN_DIALOG_TWO_DATA, LOGIN_FORM, USER_INFO } from './core/reusable-dialog.constant';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfirmDialogComponent } from 'src/app/shared/dialog/confirm-dialog/confirm-dialog.component';\r\nimport { FormDialogComponent } from 'src/app/shared/dialog/form-dialog/form-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-reusable-dialog',\r\n  templateUrl: './reusable-dialog.component.html',\r\n  styleUrls: ['./reusable-dialog.component.scss']\r\n})\r\nexport class ReusableDialogComponent implements OnInit {\r\n  contactData = CONTACT_HEADER;\r\n  openDialogOneData = OPEN_DIALOG_ONE_DATA;\r\n  openDialogTwoData = OPEN_DIALOG_TWO_DATA;\r\n  openFormDialogOneData = LOGIN_FORM;\r\n  openFormDialogTwoData = USER_INFO;\r\n  dialogOneData:any;\r\n  dialogTwoData:any;\r\n  dialogFormOneData:any;\r\n  dialogFormTwoData:any;\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  openDialogOne() {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      width: '400px',\r\n      data: this.openDialogOneData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n      if(result){\r\n        this.onSubmitDialogOne();\r\n      }\r\n    });\r\n  }\r\n  openDialogTwo() {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      width: '400px',\r\n      data: this.openDialogTwoData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log(`Dialog result: ${result}`);\r\n      if(result){\r\n        this.onSubmitDialogTwo();\r\n      }\r\n    });\r\n  }\r\n  openFormDialogOne() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      width: '400px',\r\n      data: this.openFormDialogOneData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.onSubmitLoginForm(result)\r\n    });\r\n  }\r\n  openFormDialogTwo() {\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      width: '400px',\r\n      data: this.openFormDialogTwoData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.onSubmitUserForm(result)\r\n    });\r\n  }\r\n  onSubmitDialogOne(){\r\n    this.dialogOneData = \"On Submit Message Done\";\r\n  }\r\n  onSubmitDialogTwo(){\r\n    this.dialogTwoData = \"Thanks, your form successfully submitted!!!\";\r\n  }\r\n  onSubmitLoginForm(data:any){\r\n    this.dialogFormOneData = data?.value;\r\n  }\r\n  onSubmitUserForm(data:any){\r\n    this.dialogFormTwoData = data?.value;\r\n\r\n  }\r\n}\r\n","<div class=\"space-30\"></div>\r\n<button class=\"primary-btn\" routerLink=\"/\">Back</button>\r\n<app-contact [data]=\"contactData\"></app-contact>\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <button class=\"primary-btn\" mat-button (click)=\"openDialogOne()\">Open Dialog 1</button>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <button class=\"primary-btn\" mat-button (click)=\"openDialogTwo()\">Open Dialog 2</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <button class=\"primary-btn\" mat-button (click)=\"openFormDialogOne()\">Open Form Dialog 1</button>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <button class=\"primary-btn\" mat-button (click)=\"openFormDialogTwo()\">Open Form Dialog 2</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <ul>\r\n      <li>\r\n        For Dialog One: <span>{{dialogOneData}}</span>\r\n      </li>\r\n      <li>\r\n        For Dialog Two: <span>{{dialogTwoData}}</span>\r\n      </li>\r\n      <li>\r\n        For Form Dialog One: <span>{{dialogFormOneData | json}}</span>\r\n      </li>\r\n      <li>\r\n        For Form Dialog Two: <span>{{dialogFormTwoData | json}}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n"],"sourceRoot":"webpack:///"}